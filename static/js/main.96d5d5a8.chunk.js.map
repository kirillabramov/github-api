{"version":3,"sources":["components/input/index.js","components/App.js","redux/auth/reducer.js","redux/reducers.js","redux/rootSaga.js","redux/store.js","index.js"],"names":["Input","onChange","value","type","connect","state","console","log","auth","test","props","useState","username","setUsername","fetch","className","search","target","defaultState","combineReducers","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"mNAMeA,EAJD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzB,OAAO,2BAAOC,KAAK,OAAOF,SAAUA,EAAUC,MAAOA,KCkBvD,IAOeE,eAPF,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GACL,CACLG,KAAMH,EAAMG,KAAKC,QAINL,EAxBf,SAAaM,GAAQ,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,KASlB,OAFmBC,MAAM,IAGvB,yBAAKC,UAAU,OACb,kBAAC,EAAD,CAAOC,OAAQJ,EAAUX,SARJ,SAAC,GAA2B,IAAfC,EAAc,EAAxBe,OAAUf,MACpCW,EAAYX,MAQV,6C,eChBAgB,EAAe,CACnBT,KAAM,GCEOU,cAAgB,CAAEX,KDCN,WAAkC,yFAGvD,OAAOU,K,oCELYE,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,IADG,uCCGf,IAAMC,EAAiBC,cAEVC,EAAQC,YAAYC,EAAUC,YAAgBL,IAE3DA,EAAeM,IAAIR,GCHnBS,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.96d5d5a8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = ({ onChange, value }) => {\n  return <input type=\"text\" onChange={onChange} value={value} />;\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Input from \"./input\";\n\nfunction App(props) {\n  const [username, setUsername] = useState(\"\");\n\n  const onUsernameChange = ({ target: { value } }) => {\n    setUsername(value);\n  };\n\n  const fetchLogin = fetch(\"\");\n\n  return (\n    <div className=\"App\">\n      <Input search={username} onChange={onUsernameChange} />\n      <button>Login</button>\n    </div>\n  );\n}\n\nconst MSTP = (state) => {\n  console.log(state);\n  return {\n    auth: state.auth.test,\n  };\n};\n\nexport default connect(MSTP)(App);\n","const defaultState = {\n  test: 1,\n};\n\nexport const authReducer = (state = defaultState, action) => {\n  switch (action) {\n    default:\n      return defaultState;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth/reducer\";\n\nexport default combineReducers({ auth: authReducer });\n","import { all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n  yield all([]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}